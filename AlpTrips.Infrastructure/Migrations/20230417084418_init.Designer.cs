// <auto-generated />
using System;
using AlpTrips.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlpTrips.Infrastructure.Migrations
{
    [DbContext(typeof(AlpTripsDbContext))]
    [Migration("20230417084418_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AlpTrips.Domain.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Elevation")
                        .HasColumnType("int");

                    b.Property<string>("EncodedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MountainRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 17, 10, 44, 18, 121, DateTimeKind.Local).AddTicks(2165),
                            Description = "3 najwyższy sczyt Austrii",
                            Elevation = 0,
                            Length = 0,
                            Level = 2,
                            Link = "https://dzikumaniak.pl/2022/10/28/weiskugel/",
                            MountainRange = "Alpy Ötztalskie",
                            Name = "Weisskugel 3739m npm",
                            Time = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 17, 10, 44, 18, 121, DateTimeKind.Local).AddTicks(2231),
                            Description = "Jeden z trudnijeszych szczytów w Alpach dla średniozaawansowanych",
                            Elevation = 0,
                            Length = 0,
                            Level = 4,
                            Link = "https://dzikumaniak.pl/2022/08/14/weisshorn-4505m-48h/",
                            MountainRange = "Alpy Pennińskie",
                            Name = "Weisshorn 4505m npm",
                            Time = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 4, 17, 10, 44, 18, 121, DateTimeKind.Local).AddTicks(2240),
                            Description = "Trawers przez Ostgrat",
                            Elevation = 0,
                            Length = 0,
                            Level = 2,
                            Link = "https://dzikumaniak.pl/2022/06/08/trawers-wildspitze/",
                            MountainRange = "Alpy Ötztalskie",
                            Name = "Trawers Wildspitze 3768m npm",
                            Time = 0,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("AlpTrips.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dziku@gmail.com",
                            Name = "Dziku"
                        },
                        new
                        {
                            Id = 2,
                            Email = "aga@w.pl",
                            Name = "Aga"
                        },
                        new
                        {
                            Id = 3,
                            Email = "tomake@w.pl",
                            Name = "Tomek"
                        });
                });

            modelBuilder.Entity("AlpTrips.Domain.Entities.Trip", b =>
                {
                    b.HasOne("AlpTrips.Domain.Entities.User", "User")
                        .WithMany("TripsList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlpTrips.Domain.Entities.User", b =>
                {
                    b.Navigation("TripsList");
                });
#pragma warning restore 612, 618
        }
    }
}
